======================
导出和导入数据
======================

.. |list| replace:: :icon:`oi-view-list` :guilabel:`(列表)` 图标
.. |actions| replace:: :icon:`fa-cog` :guilabel:`操作`

在 Odoo 中，有时需要导出或导入数据以运行报表或修改数据。本文档涵盖了将数据导入和导出 Odoo 的过程。

.. important::
   有时由于数据量过大，用户可能会遇到“超时”错误，或记录无法处理。这种情况可能发生在大型导出或导入文件过大的情况下。为避免记录大小限制，可以将导出或导入分成较小的批次处理。

.. _export-data:

从 Odoo 导出数据
=====================

在使用数据库时，有时需要将数据导出为单独的文件。这对于报告活动很有帮助，尽管 Odoo 提供了每个应用的精确而简便的报告工具。

使用 Odoo，可以从任何记录中的任何字段导出值。为此，激活列表视图（|list|），选择需要导出的项目，然后选择要导出的记录。要选择记录，请勾选相应记录旁边的复选框。最后，点击 |actions|，然后选择 :guilabel:`导出`。

.. image:: export_import_data/list-view-export.png
   :align: center
   :alt: 启用/点击导出数据的不同步骤视图。

点击 :guilabel:`导出` 后，会弹出一个 :guilabel:`导出数据` 窗口，其中有多个导出数据的选项：

.. image:: export_import_data/export-data-overview.png
   :align: center
   :alt: 在 Odoo 中导出数据时需要考虑的选项概览。

#. 勾选 :guilabel:`我想更新数据（兼容导入的导出）` 选项时，系统只显示可以导入的字段。这在 :ref:`需要更新现有记录 <essentials/update-data>` 时很有帮助。这类似于一个过滤器。不勾选此框时，会显示更多的字段选项，因为它显示了所有字段，而不仅仅是可以导入的字段。
#. 导出时，可以选择两种格式：`.csv` 和 `.xls`。使用 `.csv` 时，项目以逗号分隔，而 `.xls` 文件包含有关所有工作表的信息，包括内容和格式。
#. 这些是可以导出的项目。使用 :guilabel:`> (右箭头)` 图标显示更多子字段选项。使用 :guilabel:`搜索` 栏查找特定字段。为了更有效地使用 :guilabel:`搜索` 选项，点击所有 :guilabel:`> (右箭头)` 显示所有字段。
#. :guilabel:`+ (加号)` 图标按钮用于将字段添加到 :guilabel:`导出的字段` 列表中。
#. 选定字段左侧的 :guilabel:`↕️ (上下箭头)` 用于上下移动字段，以更改它们在导出文件中的显示顺序。可以通过拖放 :guilabel:`↕️ (上下箭头)` 图标来实现。
#. :guilabel:`🗑️ (垃圾桶)` 图标用于删除字段。点击 :guilabel:`🗑️ (垃圾桶)` 图标删除字段。
#. 对于定期报告，保存导出预设很有帮助。选择所有需要的字段，然后点击模板下拉菜单。在此处点击 :guilabel:`新建模板`，并为刚创建的导出指定唯一名称。点击 :guilabel:`💾 (软盘)` 图标保存配置。下次需要导出相同列表时，从下拉菜单中选择之前保存的相关模板。

.. tip::
   了解字段的外部标识符非常有帮助。例如，导出用户界面中的 :guilabel:`关联公司` 等同于 *parent_id*（外部标识符）。这非常有用，因为只有导出的数据是需要修改并重新导入的数据。

.. _import-data:

将数据导入 Odoo
=====================

在实施期间或需要 :ref:`批量更新数据 <essentials/update-data>` 时，将数据导入 Odoo 非常有帮助。以下文档介绍了如何将数据导入 Odoo 数据库。

.. warning::
   导入操作是永久性的，**无法撤销**。不过，可以使用过滤器（如 `创建时间` 或 `最后修改时间`）来识别通过导入更改或创建的记录。

.. tip::
   激活 :ref:`开发者模式 <developer-mode>` 会更改左侧菜单中显示的导入设置。激活后会显示 :menuselection:`高级` 菜单。此高级菜单包括两个选项：:guilabel:`在导入期间跟踪历史` 和 :guilabel:`允许与子字段匹配`。

   .. image:: export_import_data/advanced-import.png
      :align: center
      :alt: 启用开发者模式时的高级导入选项。

   如果模型使用 openchatter，选中 :guilabel:`在导入期间跟踪历史` 选项会在导入期间设置订阅并发送通知，但会导致导入速度较慢。

   如果选中 :guilabel:`允许与子字段匹配` 选项，则在导入时，所有字段中的子字段都会用于匹配。

开始导入
-----------

可以使用 Excel (`.xlsx`) 或 :abbr:`CSV (逗号分隔值)` (`.csv`) 格式将数据导入到 Odoo 中的任何业务对象中。这包括：联系人、产品、银行对账单、日记账分录和订单。

打开要导入数据的对象视图，点击 :menuselection:`⚙️ (操作) --> 导入记录`。

.. image:: export_import_data/import-button.png
   :align: center
   :alt:  操作菜单显示的导入记录选项。

点击 :guilabel:`导入记录` 后，Odoo 会显示一个单独的页面，其中包含可以下载的模板，并填充公司自己的数据。由于数据映射已经完成，因此可以一键导入这些模板。要下载模板，请点击页面中央的 :guilabel:`客户导入模板`。

.. important::
   当导入 :abbr:`CSV (逗号分隔值)` 文件时，Odoo 会提供 :guilabel:`格式化` 选项。导入专有 Excel 文件类型 (`.xls`, `.xlsx`) 时，不会出现这些选项。

   .. image:: export_import_data/formatting.png
      :align: center
      :alt: 导入 CSV 文件时 Odoo 提供的格式化选项。

对 *格式化* 选项进行必要调整，确保 :guilabel:`Odoo 字段` 和 :guilabel:`文件列` 中的所有列均无错误。最后，点击 :guilabel:`导入` 导入数据。

调整模板
----------------

导入工具中提供了导入最常见数据（联系人、产品、银行对账单等）的模板。可以使用任何电子表格软件（*Microsoft Office*、*OpenOffice*、*Google Drive* 等）打开这些模板。

下载模板后，按照以下步骤操作：

- 添加、删除和排序列以最好地适应数据结构。
- 强烈建议 **不要** 删除 :guilabel:`外部 ID` (ID) 列（在下一节中解释原因）。
- 通过在 :guilabel:`外部 ID` (ID) 列中向下拖动 ID 序列，为每条记录设置唯一 ID。

.. image:: export_import_data/dragdown.gif
   :align: center
   :alt: 显示鼠标向下拖动 ID 列，使每条记录都有唯一 ID 的动画。

.. note::
   当添加新列时，如果其标签不符合 Odoo 中的任何字段，Odoo 可能无法自动映射它。不过，可以在测试导入时手动映射新列。通过下拉菜单查找相应字段。

   .. image:: export_import_data/field_list.png
      :align: center
      :alt: 在 Odoo 的初始导入屏幕中展开的下拉菜单。

   然后，在导入文件中使用该字段的标签，以确保将来导入成功。

.. tip::
   另一个找到正确导入列名的有用方法是使用应导入的字段导出示例文件。这样，如果没有样本导入模板，名称也会是准确的。

.. _essentials/external-id:

从其他应用导入
-------------------------------

:guilabel:`外部 ID` (ID) 是每个项目的唯一标识符。可以随意使用来自以前软件的外部 ID 来简化迁移到 Odoo 的过程。

在导入时设置 ID 不是强制性的，但在许多情况下很有帮助：

- :ref:`更新导入 <essentials/update-data>`：多次导入同一文件而不创建重复项。
- :ref:`导入关联字段 <export_import_data/relation-fields>`。

要重新创建不同记录之间的关系，应使用原始应用中的唯一标识符将其映射到 Odoo 中的 :guilabel:`外部 ID` (ID) 列。

当另一个记录链接到第一个记录时，使用 **XXX/ID** (XXX/外部 ID) 作为原始唯一标识符。该记录也可以通过其名称找到。

.. warning::
   请注意，如果两个（或更多）记录具有相同的 *外部 ID*，则会发生冲突。

无法映射列的字段
---------------------------

Odoo 会根据导入文件的前十行，启发式地尝试为每列找到相应字段的类型。

例如，如果某列仅包含数字，则仅显示具有 *整数* 类型的字段作为选项。

虽然这种行为在大多数情况下很有用，但也有可能失败，或者该列可能映射到一个默认情况下未提供的字段。

如果发生这种情况，请选中 :guilabel:`显示关联字段的字段（高级）选项`，然后为每一列提供完整的字段列表。

.. image:: export_import_data/field_list.png
   :align: center
   :alt: 正在为税列匹配字段。

更改数据导入格式
-------------------------

.. note::
   Odoo 可以自动检测某列是否为日期，并尝试从最常用的日期格式集中猜测日期格式。虽然此过程可以处理多种日期格式，但某些日期格式无法识别。这可能会导致日期格式混淆，因为日期格式中的哪部分是日、哪部分是月可能会不清楚，例如 `01-03-2016`。

当导入 :abbr:`CSV (逗号分隔值)` 文件时，Odoo 提供 :guilabel:`格式化` 选项。

要查看 Odoo 从文件中找到的日期格式，请在文件选择器下点击选项时查看 :guilabel:`日期格式`。如果此格式不正确，请使用 *ISO 8601* 定义的格式更改为首选格式。

.. important::
   *ISO 8601* 是一个国际标准，涵盖全球范围内的日期和时间相关数据交换及通信。例如，日期格式应为 `YYYY-MM-DD`。因此，对于 1981 年 7 月 24 日，应该写为 `1981-07-24`。

.. tip::
   导入 Excel 文件（`.xls`、`.xlsx`）时，建议使用 *日期单元格* 存储日期。这可保持区域日期格式的显示，无论 Odoo 中的日期如何格式化。导入 :abbr:`CSV (逗号分隔值)` 文件时，使用 Odoo 的 :guilabel:`格式化` 部分选择要导入的日期格式列。

带货币符号的数字导入
----------------------------------

Odoo 完全支持使用括号表示负数的数字以及附有货币符号的数字。Odoo 还会自动检测使用的千位分隔符/小数分隔符。如果 Odoo 不识别的货币符号被使用，可能无法识别为数字，导入将失败。

.. note::
   导入 :abbr:`CSV (逗号分隔值)` 文件时，:guilabel:`格式化` 菜单会出现在左侧栏下。在这些选项中，可以更改 :guilabel:`千位分隔符`。

以下是支持的数字示例（使用“三万二千”作为数字）：

- 32.000,00
- 32000,00
- 32,000.00
- -32000.00
- (32000.00)
- $ 32.000,00
- (32000.00 €)

不支持的示例：

- ABC 32.000,00
- $ (32.000,00)

.. important::
   用括号 :guilabel:`() (括号)` 包围的数字表示负值。货币符号 **必须** 放置在括号内，Odoo 才能将其识别为负的货币值。

导入预览表显示不正确
--------------------------------------------
默认情况下，导入预览设置为使用逗号作为字段分隔符，双引号作为文本定界符。如果 :abbr:`CSV (逗号分隔值)` 文件不符合这些设置，请修改 :guilabel:`格式化` 选项（在选择 :abbr:`CSV (逗号分隔值)` 文件后显示在 :guilabel:`导入` 文件栏下方）。

.. important::
   如果 :abbr:`CSV (逗号分隔值)` 文件使用制表符作为分隔符，Odoo **不会** 检测到分隔符。需要在电子表格应用程序中修改文件格式选项。请参阅以下 :ref:`更改 CSV 文件格式 <export_import_data/change-csv>` 部分。

.. _export_import_data/change-csv:

在电子表格应用中更改 CSV 文件格式
-------------------------------------------------

在电子表格应用程序中编辑和保存 :abbr:`CSV (逗号分隔值)` 文件时，计算机的区域设置会应用于分隔符和定界符。Odoo 建议使用 *OpenOffice* 或 *LibreOffice*，因为这两个应用程序允许修改所有三个选项（在 *LibreOffice* 应用程序中，转到 :menuselection:`'另存为' 对话框 --> 勾选 '编辑过滤器设置' 复选框 --> 保存`）。

Microsoft Excel 可以在保存时修改编码（:menuselection:`'另存为' 对话框 --> '工具' 下拉菜单 --> 编码选项卡`）。

数据库 ID 和外部 ID 之间的区别
----------------------------------------------

某些字段定义了与另一个对象的关系。例如，联系人的国家/地区是与 'Country' 对象记录的链接。当导入此类字段时，Odoo 必须重新创建不同记录之间的链接。为帮助导入此类字段，Odoo 提供了三种机制。

.. important::
   **每个导入的字段只能使用一种** 机制。

例如，要引用联系人的国家/地区，Odoo 提供三种不同的导入字段：

- :guilabel:`国家/地区`: 国家/地区的名称或代码
- :guilabel:`国家/地区/数据库 ID`: 记录的唯一 Odoo ID，由 PostgreSQL 列中的 ID 定义
- :guilabel:`国家/地区/外部 ID`: 此记录在另一个应用程序中引用的 ID（或导入该记录的 `.XML` 文件）

例如，对于比利时国家/地区，可以使用以下三种方式之一进行导入：

- :guilabel:`国家/地区`: `比利时`
- :guilabel:`国家/地区/数据库 ID`: `21`
- :guilabel:`国家/地区/外部 ID`: `base.be`

根据公司的需求，使用这三种方式之一来引用关系中的记录。以下是根据需求使用哪一种方式的示例：

- 使用 :guilabel:`国家/地区`: 当数据来自手动创建的 :abbr:`CSV (逗号分隔值)` 文件时，这是最简单的方式。
- 使用 :guilabel:`国家/地区/数据库 ID`: 这种方式很少使用。它主要由开发人员使用，其主要优势在于永远不会产生冲突（可能有多个记录具有相同的名称，但它们总是具有唯一的数据库 ID）。
- 使用 :guilabel:`国家/地区/外部 ID`: 当从第三方应用程序导入数据时，使用 *外部 ID*。

当使用 *外部 ID* 时，导入的 :abbr:`CSV (逗号分隔值)` 文件中包含定义每个记录的 *外部 ID* 的 :guilabel:`外部 ID` (ID) 列。然后可以使用类似 `字段/外部 ID` 的列来引用该记录。以下两个 :abbr:`CSV (逗号分隔值)` 文件为产品及其类别提供了示例。

- :download:`类别的 CSV 文件
  <export_import_data/External_id_3rd_party_application_product_categories.csv>`
- :download:`产品的 CSV 文件
  <export_import_data/External_id_3rd_party_application_products.csv>`

.. _export_import_data/relation-fields:

导入关系字段
----------------------

Odoo 对象总是与许多其他对象相关联（例如，产品与产品类别、属性、供应商等关联）。要导入这些关系，首先需要从相关对象的列表菜单中导入其记录。

这可以通过使用相关记录的名称或 ID 实现，具体取决于情况。当两个记录具有相同的名称时，预期使用 ID。在这种情况下，在列标题末尾添加 `/ ID`（例如，对于产品属性：`产品属性 / 属性 / ID`）。

字段多次匹配的选项
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

例如，如果有两个产品类别都包含子名称 `可销售`（例如，`杂项产品/可销售` 和 `其他产品/可销售`），则验证会暂停，但数据可能仍会导入。然而，Odoo 建议不要导入这些数据，因为它们都将链接到 *产品类别* 列表中找到的第一个 `可销售` 类别（`杂项产品/可销售`）。Odoo 建议修改其中一个重复值，或修改产品类别层次结构。

但是，如果公司不希望更改产品类别的配置，Odoo 建议为该字段 `类别` 使用 *外部 ID*。

导入多对多关系字段
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
标签应以逗号分隔，不带空格。例如，如果需要将客户链接到两个标签：`制造商` 和 `零售商`，那么在 :abbr:`CSV (逗号分隔值)` 文件中的同一列中应编码为 'Manufacturer,Retailer'。

- :download:`制造商和零售商的 CSV 文件 <export_import_data/m2m_customers_tags.csv>`

导入一对多关系
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

如果公司希望导入包含多个订单行的销售订单，则必须在 :abbr:`CSV (逗号分隔值)` 文件中为每个订单行保留特定的行。第一个订单行与订单相关信息一起导入到同一行。任何附加的订单行需要额外的行，并且这些行不应包含与订单相关的字段信息。

以下是基于演示数据可以导入的某些报价单的 :abbr:`CSV (逗号分隔值)` 文件示例：

- :download:`一些报价单的文件 <export_import_data/purchase.order_functional_error_line_cant_adpat.csv>`

以下 :abbr:`CSV (逗号分隔值)` 文件显示了如何导入包含订单行的采购订单：

- :download:`包含订单行的采购订单 <export_import_data/o2m_purchase_order_lines.csv>`

以下 :abbr:`CSV (逗号分隔值)` 文件显示了如何导入客户及其相关联系人：

- :download:`客户及其相关联系人的文件 <export_import_data/o2m_customers_contacts.csv>`

多次导入记录
----------------------------

如果导入的文件包含 :guilabel:`外部 ID` 或 :guilabel:`数据库 ID` 之一，已经导入的记录将被修改，而不是被创建。这非常有用，因为它允许用户多次导入相同的 :abbr:`CSV (逗号分隔值)` 文件，同时在两次导入之间进行一些更改。

Odoo 将负责根据记录是新的还是已有的来创建或修改每条记录。

此功能允许公司使用 Odoo 的 *导入/导出工具* 来在电子表格应用程序中修改批量记录。

未为特定字段提供值
---------------------------------------

如果 CSV 文件中未设置所有字段，Odoo 将为每个未定义字段分配默认值。但是，如果 :abbr:`CSV (逗号分隔值)` 文件中的字段被设置为空值，Odoo 将为该字段设置空值，而不是分配默认值。

从 SQL 应用导出/导入不同表格到 Odoo
--------------------------------------------------------------

如果需要从不同表格导入数据，则需要重新创建属于不同表格的记录之间的关系。例如，如果公司和员工都被导入，则需要重新创建每个员工与其所属公司的链接。

要管理表格之间的关系，请使用 Odoo 的 `外部 ID` 功能。记录的 `外部 ID` 是该记录在另一个应用程序中的唯一标识符。`外部 ID` 必须在所有对象的所有记录中唯一。最好在 `外部 ID` 前加上应用程序或表格的名称。（例如，'company_1'，'person_1'，而不是 '1'）

例如，假设有一个 SQL 数据库，其中有两个要导入的表：公司和员工。每个员工都属于一个公司，因此必须重新创建员工与其所属公司的链接。

使用 :download:`PostgreSQL 数据库示例 <export_import_data/database_import_test.sql>` 测试此示例。

首先，导出所有公司的 *外部 ID*。在 PSQL 中，编写以下命令：

.. code-block:: sh

   > copy (select 'company_'||id as "外部 ID",company_name as "名称",'True' as "是否为公司" from companies) TO '/tmp/company.csv' with CSV HEADER;

此 SQL 命令创建了以下 :abbr:`CSV (逗号分隔值)` 文件：

.. code-block:: text

   外部 ID,名称,是否为公司
   company_1,Bigees,True
   company_2,Organi,True
   company_3,Boum,True

要为与公司关联的人员创建 :abbr:`CSV (逗号分隔值)` 文件，请在 PSQL 中使用以下 SQL 命令：

.. code-block:: sh

    > copy (select 'person_'||id as "外部 ID",person_name as "名称",'False' as "是否为公司",'company_'||company_id as "关联公司/外部 ID" from persons) TO '/tmp/person.csv' with CSV

此命令生成了以下 :abbr:`CSV (逗号分隔值)` 文件：

.. code-block:: text

   外部 ID,名称,是否为公司,关联公司/外部 ID
   person_1,Fabien,False,company_1
   person_2,Laurence,False,company_1
   person_3,Eric,False,company_2
   person_4,Ramsy,False,company_3

在此文件中，Fabien 和 Laurence 为 Bigees 公司（`company_1`）工作，而 Eric 为 Organi 公司工作。员工与公司之间的关系是通过公司的 *外部 ID* 完成的。*外部 ID* 以表名为前缀，以避免员工和公司之间 ID 冲突（例如，`person_1` 和 `company_1` 在原始数据库中共享相同的 ID 1）。

生成的这两个文件可以直接导入 Odoo，无需任何修改。在导入这两个 :abbr:`CSV (逗号分隔值)` 文件后，系统中会有四个联系人和三家公司（前两个联系人链接到第一家公司）。请记住，首先导入公司，然后导入员工。

.. _essentials/update-data:

在 Odoo 中更新数据
===================

只要 :ref:`外部 ID <essentials/external-id>` 保持一致，现有数据就可以通过数据导入进行批量更新。

准备数据导出
-------------------

要通过导入更新数据，首先导航到要更新的数据，并选择 |list| 以激活列表视图。在列表的最左侧，勾选要更新的任何记录的复选框。然后，点击 |actions|，并从下拉菜单中选择 :icon:`fa-upload` :guilabel:`导出`。

在弹出的 :guilabel:`导出数据` 窗口中，勾选标记为 :guilabel:`我想更新数据（兼容导入的导出）` 的复选框。这样会自动将 *外部 ID* 包含在导出中。此外，它将 :guilabel:`导出字段` 列表限制为 **仅** 包含能够导入的字段。

.. note::
   除非手动添加，否则 :guilabel:`外部 ID` 字段不会出现在 :guilabel:`导出字段` 列表中，但它仍然会包含在导出中。然而，如果勾选了 :guilabel:`我想更新数据（兼容导入的导出）` 复选框，它将包含在导出中。

使用弹出窗口中的 :ref:`选项 <export-data>` 选择要包含在导出中的字段，然后点击 :guilabel:`导出`。

导入更新的数据
-------------------

导出后，对数据文件进行必要的更改。准备好文件后，可以按照正常数据导入的过程 :ref:`导入数据 <import-data>`。

.. danger::
   在更新数据时，保持 *外部 ID* 一致非常重要，因为这是系统识别记录的方式。如果 ID 被更改或删除，系统可能会添加重复记录，而不是更新现有记录。
